<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:s="http://schemas.microsoft.com/surface/2008"
    xmlns:System="clr-namespace:System;assembly=mscorlib"
    >
    <!-- Base Grid style -->
    <Style TargetType="{x:Type Control}" x:Key="ControlBaseStyle">
        <Setter Property="FocusVisualStyle"
				Value="{x:Null}"/>
        <Setter Property="SnapsToDevicePixels"
				Value="False"/>
        <Setter Property="FontFamily"
				Value="Segoe360"/>
        <Setter Property="FontWeight"
				Value="Normal"/>
        <Setter Property="FontSize"
				Value="17"/>
        <Setter Property="Padding"
				Value="6,2,10,10"/>
        <Setter Property="MinHeight"
				Value="38"/>
        <Setter Property="MinWidth"
				Value="38"/>
        <Setter Property="Margin"
				Value="1"/>
        <Setter Property="HorizontalContentAlignment"
				Value="Left"/>
        <Setter Property="VerticalContentAlignment"
				Value="Top"/>
        <Setter Property="BorderThickness"
				Value="2"/>
    </Style>

    <!-- ButtonBase used in HomeScreen's buttons -->
    <Style x:Key="HomeContentButton"
			TargetType="{x:Type s:SurfaceButton}" 
			BasedOn="{StaticResource ControlBaseStyle}">
        <Setter Property="IsTabStop"
				Value="False" />
        <Setter Property="Focusable"
				Value="True" />
        <Setter Property="Background"
				Value="{DynamicResource {x:Static s:SurfaceColors.ButtonBackgroundBrushKey}}" />
        <Setter Property="Foreground"
				Value="{DynamicResource {x:Static s:SurfaceColors.ButtonForegroundBrushKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type s:SurfaceButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="Press">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
									Storyboard.TargetName="PressOverlay"
									Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000"
										Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="Release">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
									Storyboard.TargetName="PressOverlay"
									Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1500000"
										Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid x:Name="Grid" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <Rectangle  x:Name="ButtonBody"
								    Fill ="{TemplateBinding Background}"
								    SnapsToDevicePixels ="{TemplateBinding SnapsToDevicePixels}"/>
                        <Rectangle  x:Name="PressOverlay"
								    Opacity="0"
								    Fill ="{DynamicResource {x:Static s:SurfaceColors.ButtonBackgroundPressedBrushKey}}" 							             
								    SnapsToDevicePixels ="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="Stretch"/>
                        <ContentPresenter x:Name="Content"
								          Margin="{TemplateBinding Padding}"
								          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource Press}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource Release}" />
                            </Trigger.ExitActions>
                            <Setter Property="Foreground"
									Value="{DynamicResource {x:Static s:SurfaceColors.ButtonForegroundPressedBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
								 Value="False">
                            <Setter Property="Fill"
									Value="{DynamicResource {x:Static s:SurfaceColors.ButtonBackgroundDisabledBrushKey}}"
									TargetName="ButtonBody" />
                            <Setter Property="Foreground"
									Value="{DynamicResource {x:Static s:SurfaceColors.ButtonForegroundDisabledBrushKey}}"/>
                            <Setter Property="Opacity"
									Value="0.33"
									TargetName="Content" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Template for BackButton -->
    <Style x:Key="BackButton"
			TargetType="{x:Type s:SurfaceButton}" 
			BasedOn="{StaticResource ControlBaseStyle}">
        <Setter Property="IsTabStop"
				Value="False" />
        <Setter Property="Focusable"
				Value="True" />
        <Setter Property="Background"
				Value="{DynamicResource {x:Static s:SurfaceColors.ButtonBackgroundBrushKey}}" />
        <Setter Property="Foreground"
				Value="{DynamicResource {x:Static s:SurfaceColors.ButtonForegroundBrushKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type s:SurfaceButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="Press">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
									Storyboard.TargetName="PressOverlay"
									Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000"
										Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="Release">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
									Storyboard.TargetName="PressOverlay"
									Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1500000"
										Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid x:Name="Grid"
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <Rectangle  x:Name="PressOverlay" Opacity="0"
								    Fill ="{DynamicResource {x:Static s:SurfaceColors.ButtonBackgroundPressedBrushKey}}" 							             
								    SnapsToDevicePixels ="{TemplateBinding SnapsToDevicePixels}"/>
                        <ContentPresenter x:Name="Content" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalAlignment="Center" OpacityMask="White" HorizontalAlignment="Center" 
                                          Margin="0,0,-80,0"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource Press}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource Release}" />
                            </Trigger.ExitActions>
                            <Setter Property="Foreground"
									Value="{DynamicResource {x:Static s:SurfaceColors.ButtonForegroundPressedBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground"
									Value="{DynamicResource {x:Static s:SurfaceColors.ButtonForegroundDisabledBrushKey}}"/>
                            <Setter Property="Opacity"
									Value="0.33"
									TargetName="Content" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Template for Selected Button (sidebar on subpages) -->
    <Style x:Key="SelectedButton" TargetType="{x:Type s:SurfaceButton}" BasedOn="{StaticResource ControlBaseStyle}">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Focusable" Value="True" />
        <Setter Property="Background" Value="{DynamicResource {x:Static s:SurfaceColors.ButtonBackgroundBrushKey}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static s:SurfaceColors.ButtonForegroundBrushKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type s:SurfaceButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="Press">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
									Storyboard.TargetName="PressOverlay"
									Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="Release">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
									Storyboard.TargetName="PressOverlay"
									Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1500000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid x:Name="Grid"
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <!-- Dynamic Resource SelectedColour set per page -->
                        <Rectangle  x:Name="ButtonBody"
								    SnapsToDevicePixels ="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Stretch" 
                                    Fill="{DynamicResource SelectedColour}" Margin="8,4" RadiusX="2" RadiusY="2">
                            <Rectangle.Effect>
                                <DropShadowEffect Color="#FF9D9D9D" BlurRadius="10"/>
                            </Rectangle.Effect>
                        </Rectangle>
                        <Rectangle  x:Name="PressOverlay" Opacity="0"
								Fill ="{DynamicResource {x:Static s:SurfaceColors.ButtonBackgroundPressedBrushKey}}" 							             
								SnapsToDevicePixels ="{TemplateBinding SnapsToDevicePixels}"/>
                        <ContentPresenter  x:Name="Content"
								SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource Press}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource Release}" />
                            </Trigger.ExitActions>
                            <Setter Property="Foreground"
									Value="{DynamicResource {x:Static s:SurfaceColors.ButtonForegroundPressedBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Fill"
									Value="{DynamicResource {x:Static s:SurfaceColors.ButtonBackgroundDisabledBrushKey}}"
									TargetName="ButtonBody" />
                            <Setter Property="Foreground"
									Value="{DynamicResource {x:Static s:SurfaceColors.ButtonForegroundDisabledBrushKey}}"/>
                            <Setter Property="Opacity"
									Value="0.33"
									TargetName="Content" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Template for Unselected Button (sidebar on subpages) -->
    <Style x:Key="NotSelectedButton" TargetType="{x:Type s:SurfaceButton}" BasedOn="{StaticResource ControlBaseStyle}">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Focusable" Value="True" />
        <Setter Property="Background" Value="{DynamicResource {x:Static s:SurfaceColors.ButtonBackgroundBrushKey}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static s:SurfaceColors.ButtonForegroundBrushKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type s:SurfaceButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="Press">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
									Storyboard.TargetName="PressOverlay"
									Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="Release">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
									Storyboard.TargetName="PressOverlay"
									Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1500000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid x:Name="Grid" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <!-- Dynamic Resource NotSelectedColour set per page -->
                        <Rectangle  x:Name="ButtonBody"
								    SnapsToDevicePixels ="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Stretch" 
                                    Fill="{DynamicResource NotSelectedColour}" Margin="8,4" RadiusX="2" RadiusY="2">
                            <Rectangle.Effect>
                                <DropShadowEffect Color="#FF9D9D9D" BlurRadius="10"/>
                            </Rectangle.Effect>
                        </Rectangle>
                        <Rectangle  x:Name="PressOverlay" Opacity="0"
								    Fill ="{DynamicResource {x:Static s:SurfaceColors.ButtonBackgroundPressedBrushKey}}" 							             
								    SnapsToDevicePixels ="{TemplateBinding SnapsToDevicePixels}"/>
                        <ContentPresenter  x:Name="Content"
								           SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                           HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource Press}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource Release}" />
                            </Trigger.ExitActions>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static s:SurfaceColors.ButtonForegroundPressedBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Fill"
									Value="{DynamicResource {x:Static s:SurfaceColors.ButtonBackgroundDisabledBrushKey}}"
									TargetName="ButtonBody" />
                            <Setter Property="Foreground"
									Value="{DynamicResource {x:Static s:SurfaceColors.ButtonForegroundDisabledBrushKey}}"/>
                            <Setter Property="Opacity"
									Value="0.33"
									TargetName="Content" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- Set up slight gradient type Background -->
    <Style x:Key="StackPanelStyle1" TargetType="{x:Type StackPanel}">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="Black" Offset="0"/>
                    <GradientStop Color="White" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--Rectangular Back Button Template-->
    <Style x:Key="BackButtonTemplate" TargetType="{x:Type Rectangle}"/>

    <!-- Event Data Template -->
    <XmlDataProvider x:Key="EventData" Source="/events/events.xml" XPath="Items" />
    <Style x:Key="ScatterViewItemStyle_AB" TargetType="{x:Type s:ScatterViewItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type s:ScatterViewItem}">
                    <Grid>
                        <Image Source="/Team_Roasters;component/Resources/Ambassadors/Amanda-Billing.jpg" Stretch="Fill" Margin="0,0,0,8"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- Minimum HitArea Base Style for 55 dpi -->
    <Style x:Key="SurfaceHitAreaBaseStyle" TargetType="{x:Type Control}">
        <Setter Property="SnapsToDevicePixels" Value="False"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="MinWidth" Value="40" />
        <Setter Property="MinHeight" Value="40" />
    </Style>

    <!-- Default Vertical Scrollbars used by different Screens set -->
    <Style x:Key="SurfaceVertScrollBarRepeatButton" TargetType="{x:Type s:SurfaceRepeatButton}" >
        <Setter Property="Interval" Value="150" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type s:SurfaceRepeatButton}">
                    <Grid Width="40" Background="{TemplateBinding Background}">
                        <Rectangle HorizontalAlignment="Center" x:Name="Line" MinWidth="2" Fill="{DynamicResource {x:Static s:SurfaceColors.TrackBackgroundBrushKey}}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Fill" TargetName="Line" Value="{DynamicResource {x:Static s:SurfaceColors.ThumbDisabledBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ScrollBar Vert Thumb -->
    <Style x:Key="SurfaceScrollBarThumbStyle" TargetType="{x:Type s:SurfaceThumb}" BasedOn="{StaticResource SurfaceHitAreaBaseStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type s:SurfaceThumb}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="Touch">
                            <DoubleAnimation Duration="0:0:0.05"
                                             Storyboard.TargetName="Thumb"
                                             Storyboard.TargetProperty="Width"
                                             To="16"/>
                            <ThicknessAnimation Duration="0:0:0.05"
                                             Storyboard.TargetName="Thumb"
                                             Storyboard.TargetProperty="Margin"
                                             To="-1,0,-1,0" />
                        </Storyboard>
                        <Storyboard x:Key="Release">
                            <DoubleAnimation Duration="0:0:0.1"
                                             Storyboard.TargetName="Thumb"
                                             Storyboard.TargetProperty="Width"
                                             To="14"/>
                            <ThicknessAnimation Duration="0:0:0.1"
                                             Storyboard.TargetName="Thumb"
                                             Storyboard.TargetProperty="Margin"
                                             To="0,0,0,0" />
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid x:Name="Grid" Background="{TemplateBinding Background}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <Rectangle x:Name="Thumb" Height="Auto" Width="14" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Fill="Black" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="s:TouchExtensions.AreAnyInputDevicesCapturedWithin" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource Touch}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource Release}"/>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Fill" TargetName="Thumb" Value="{DynamicResource {x:Static s:SurfaceColors.ThumbDisabledBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ScrollBar RepeatButton -->
    <Style x:Key="SurfaceHorzScrollBarRepeatButton" TargetType="{x:Type s:SurfaceRepeatButton}" >
        <Setter Property="Interval" Value="150" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type s:SurfaceRepeatButton}">
                    <Grid Height="40" Background="{TemplateBinding Background}">
                        <Rectangle VerticalAlignment="Center" x:Name="Line" MinHeight="2" Fill="{DynamicResource {x:Static s:SurfaceColors.TrackBackgroundBrushKey}}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Fill" TargetName="Line" Value="{DynamicResource {x:Static s:SurfaceColors.ThumbDisabledBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    
    <Style x:Key="SurfaceScrollBarHorizThumbStyle" TargetType="{x:Type s:SurfaceThumb}" BasedOn="{StaticResource SurfaceHitAreaBaseStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type s:SurfaceThumb}">
                    <ControlTemplate.Resources>
                        <!-- Vertical orientation -->
                        <Storyboard x:Key="Touch">
                            <DoubleAnimation Duration="0:0:0.05"
                                             Storyboard.TargetName="Thumb"
                                             Storyboard.TargetProperty="Height"
                                             To="16"/>
                            <ThicknessAnimation Duration="0:0:0.05"
                                             Storyboard.TargetName="Thumb"
                                             Storyboard.TargetProperty="Margin"
                                             To="0,-1,0,-1" />
                        </Storyboard>
                        <Storyboard x:Key="Release">
                            <DoubleAnimation Duration="0:0:0.1"
                                             Storyboard.TargetName="Thumb"
                                             Storyboard.TargetProperty="Height"
                                             To="14"/>
                            <ThicknessAnimation Duration="0:0:0.1"
                                             Storyboard.TargetName="Thumb"
                                             Storyboard.TargetProperty="Margin"
                                             To="0,0,0,0" />
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid x:Name="Grid" Background="{TemplateBinding Background}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" >
                        <Rectangle x:Name="Thumb" Width="Auto" Height="14" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Fill="{DynamicResource {x:Static s:SurfaceColors.ThumbEnabledBrushKey}}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="s:TouchExtensions.AreAnyInputDevicesCapturedWithin" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource Touch}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource Release}"/>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Fill" TargetName="Thumb" Value="{DynamicResource {x:Static s:SurfaceColors.ThumbDisabledBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ScrollBar -->
    <Style x:Key="SurfaceScrollBarStyle" TargetType="{x:Type s:SurfaceScrollBar}">
        <Style.Resources>
            <System:Double x:Key="{x:Static SystemParameters.VerticalScrollBarButtonHeightKey}">38</System:Double>
            <System:Double x:Key="{x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}">38</System:Double>
        </Style.Resources>
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Width" Value="38"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Template">
            <Setter.Value>
                <!-- vertical scroll bar -->
                <ControlTemplate TargetType="{x:Type s:SurfaceScrollBar}">
                    <Grid x:Name="GridRoot" Background="{TemplateBinding Background}">
                        <Border x:Name="Track" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Background="#F0F0F0">
                            <Track x:Name="PART_Track" IsDirectionReversed="True">
                                <Track.IncreaseRepeatButton>
                                    <s:SurfaceRepeatButton x:Name="IncreaseRepeat" 
                                                           Background="{TemplateBinding Background}"
                                                           HorizontalAlignment="Center"
                                                           Style="{StaticResource SurfaceVertScrollBarRepeatButton}"
                                                           Command="ScrollBar.PageDownCommand"/>
                                </Track.IncreaseRepeatButton>
                                <Track.DecreaseRepeatButton>
                                    <s:SurfaceRepeatButton x:Name="DecreaseRepeat"
                                                           Background="{TemplateBinding Background}"
                                                           HorizontalAlignment="Center"
                                                           Style="{StaticResource SurfaceVertScrollBarRepeatButton}"
                                                           Command="ScrollBar.PageUpCommand"/>
                                </Track.DecreaseRepeatButton>
                                <Track.Thumb>
                                    <s:SurfaceThumb Style="{StaticResource SurfaceScrollBarThumbStyle}"
                                                    HorizontalAlignment="Center"
                                                    x:Name="Thumb" Background="#888" BorderBrush="#888" />
                                </Track.Thumb>
                            </Track>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!-- Animates Scrollbar from small to large state -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="IsEnabled" TargetName="PART_Track" Value="False"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.BasedOn>
            <StaticResource ResourceKey="SurfaceHitAreaBaseStyle"/>
        </Style.BasedOn>

        <Style.Triggers>
            <!-- Horizontal orientation -->
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="Height" Value="38"/>
                <!-- change the whole template -->
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type s:SurfaceScrollBar}">
                            <Grid x:Name="GridRoot" Background="{TemplateBinding Background}">
                                <Border x:Name="Track" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                                    <Track x:Name="PART_Track">
                                        <Track.DecreaseRepeatButton>
                                            <s:SurfaceRepeatButton x:Name="DecreaseRepeat"
                                                                   Background="{TemplateBinding Background}"
                                                                   VerticalAlignment="Center"
                                                                   Style="{StaticResource SurfaceHorzScrollBarRepeatButton}"                                                                                                        
                                                                   Command="ScrollBar.PageLeftCommand" />
                                        </Track.DecreaseRepeatButton>
                                        <Track.IncreaseRepeatButton>
                                            <s:SurfaceRepeatButton x:Name="IncreaseRepeat"
                                                                   Background="{TemplateBinding Background}"
                                                                   VerticalAlignment="Center"
                                                                   Style="{StaticResource SurfaceHorzScrollBarRepeatButton}"
                                                                   Command="ScrollBar.PageRightCommand"/>
                                        </Track.IncreaseRepeatButton>
                                        <Track.Thumb>
                                            <s:SurfaceThumb Style="{StaticResource SurfaceScrollBarHorizThumbStyle}"        
                                                            Background="{TemplateBinding Background}"
                                                            VerticalAlignment="Center"
                                                            x:Name="Thumb"/>
                                        </Track.Thumb>
                                    </Track>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <!-- Animates Scrollbar from small to large state -->
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" TargetName="IncreaseRepeat" Value="0.33"/>
                                    <Setter Property="Opacity" TargetName="DecreaseRepeat" Value="0.33"/>
                                    <Setter Property="IsEnabled" TargetName="PART_Track" Value="False"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- ScrollViewerBase -->
    <Style x:Key="SurfaceScrollViewerStyle1" TargetType="{x:Type s:SurfaceScrollViewer}">
        <Setter Property="Elasticity" Value="0.4,0.4" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type s:SurfaceScrollViewer}">
                    <Grid Background="{TemplateBinding Background}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" MinWidth="409.95" />
                            <ColumnDefinition Width=".00001*" MinWidth="0.00001" />
                            <ColumnDefinition Width="18"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="718.108" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Border x:Name="PART_ElasticBorder">
                            <ScrollContentPresenter Margin="-1,-1,-1,-1"
                                                    Grid.Column="0"
                                                    Grid.ColumnSpan="1"
                                                    Grid.Row="0"
                                                    Grid.RowSpan="1"
                                                    Content="{TemplateBinding Content}"
                                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                                    CanContentScroll="{TemplateBinding CanContentScroll}"
                                                    CanHorizontallyScroll="False"
                                                    CanVerticallyScroll="False"
                                                    ScrollViewer.HorizontalScrollBarVisibility="Disabled" />
                        </Border>
                        <s:SurfaceScrollBar Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                            x:Name="PART_HorizontalScrollBar"
                                            Grid.Column="0"
                                            Grid.Row="1"
                                            Orientation="Horizontal"
                                            Maximum="{TemplateBinding ScrollableWidth}"
                                            Minimum="0"
                                            Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                            AutomationProperties.AutomationId="HorizontalScrollBar"
                                            Height="Auto"
                                            Style="{StaticResource SurfaceScrollBarStyle}"
                                            LargeChange="1"
                                            ViewportSize="{TemplateBinding ViewportWidth}"
                                            ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                            HorizontalContentAlignment="Stretch"
                                            VerticalContentAlignment="Stretch"
                                            HorizontalAlignment="Stretch"
                                            Foreground="{x:Null}" Margin="0,0,0,-40"/>
                        <s:SurfaceScrollBar Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                            x:Name="PART_VerticalScrollBar"
                                            Grid.Column="2"
                                            Grid.Row="0"
                                            Orientation="Vertical"
                                            Maximum="{TemplateBinding ScrollableHeight}"
                                            Minimum="0"
                                            Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                            AutomationProperties.AutomationId="VerticalScrollBar"
                                            Width="Auto"
                                            Height="663.1"
                                            Style="{StaticResource SurfaceScrollBarStyle}"
                                            LargeChange="1"
                                            ViewportSize="{TemplateBinding ViewportHeight}"
                                            ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                            HorizontalContentAlignment="Stretch"
                                            VerticalContentAlignment="Stretch"
                                            HorizontalAlignment="Right"
                                            IsEnabled="True" Margin="0,-50,-29,2" 
                                            Grid.RowSpan="1" Grid.ColumnSpan="1" RenderTransformOrigin="0.5,0.5">
                            <s:SurfaceScrollBar.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="-1"/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </s:SurfaceScrollBar.RenderTransform>
                        </s:SurfaceScrollBar>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="IsEnabled" TargetName="PART_HorizontalScrollBar" Value="False" />
                            <Setter Property="IsEnabled" TargetName="PART_VerticalScrollBar" Value="False" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ScrollViewer ScrollBar Thumb, that part that can be dragged left/right -->
    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border CornerRadius="2" Background="{TemplateBinding Background}" BorderBrush="#888" BorderThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- HorizontalScrollBar Template using the previously created Templates -->
    <ControlTemplate x:Key="HorizontalScrollBar"
            TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition MaxWidth="18"/>
                <ColumnDefinition Width="0.00001*"/>
                <ColumnDefinition MaxWidth="18"/>
            </Grid.ColumnDefinitions>
            <Border Grid.ColumnSpan="3" CornerRadius="2" Background="#F0F0F0" />
            <Track Name="PART_Track" Grid.Column="1" IsDirectionReversed="False">
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumb}" Margin="0,1,0,1" Background="#888" BorderBrush="#888" />
                </Track.Thumb>
            </Track>
        </Grid>
    </ControlTemplate>

    <!-- VerticalScrollBar Template using the previously created Templates -->
    <ControlTemplate x:Key="VerticalScrollBar"
            TargetType="{x:Type ScrollBar}">
        <Grid >
            <Grid.RowDefinitions>
                <RowDefinition MaxHeight="18"/>
                <RowDefinition Height="0.00001*"/>
                <RowDefinition MaxHeight="18"/>
            </Grid.RowDefinitions>
            <Border Grid.RowSpan="3" CornerRadius="2" Background="#F0F0F0" />
            <Track Name="PART_Track" Grid.Row="1" IsDirectionReversed="true">
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumb}" Margin="1,0,1,0" Background="#888" BorderBrush="#888" />
                </Track.Thumb>
            </Track>
        </Grid>
    </ControlTemplate>
    
    <!-- Style for overall ScrollBar -->
    <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="Height" Value="8" />
                <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Width" Value="8" />
                <Setter Property="Height" Value="Auto" />
                <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Style for overall ScrollViewer -->
    <Style x:Key="ScrollViewer" TargetType="{x:Type ScrollViewer}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <ScrollContentPresenter Grid.Column="1"/>
                        <ScrollBar Name="PART_HorizontalScrollBar" Orientation="Horizontal" Grid.Row="1" Grid.Column="1" Value="{TemplateBinding HorizontalOffset}" Maximum="{TemplateBinding ScrollableWidth}" ViewportSize="{TemplateBinding ViewportWidth}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
